//============================================================================
// Name        : whiteYandex.cpp
// Author      : 
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================

#include <iostream>
#include<string>
#include<cmath>
using namespace std;

void ex0()
{
	/*
	 * На вход программе через стандартный ввод передаются два целых числа, по модулю не превышающие 100000.
	 * Выведите в стандартный вывод их сумму.
			stdin		stdout
			2 3			5
			-4 -9		-13
			-1 2		1
		Пояснение
		Если вы не знаете, как компилировать и запускать программы на C++, вы можете просмотреть видео из блока
		"Компиляция, запуск, отладка" и, настроив среду разработки, вернуться к этой задаче.
	 * */
	long x1,x2;
	cin>>x1>>x2;
	cout<<x1+x2;
}

void ex1()
{
/*
	 * В стандартном потоке даны три строки, разделённые пробелом. Каждая строка состоит из строчных латинских букв и имеет
	 *  длину не более 30 символов. Выведите в стандартный вывод лексикографически минимальную из них.
	*
	*	Примеры
	*		stdin						stdout
	*	//	milk milkshake month		milk
	*		c a b						a
	*		fire fog wood				fire
 */
	string s1,s2,s3;
	cin>>s1>>s2>>s3;
	if(s1<s2 && s1<s3)
	{
		cout<<s1;
	}else if(s2<s1 &&s2<s3)
	{
		cout<<s2;
	}else
	{
		cout<<s3;
	}
}

void ex2()
{
/*
 * На вход вашей программе в стандартном вводе даны действительные коэффициенты A, B и C уравнения Ax² + Bx + C = 0.
 *  Выведите все его различные действительные корни в любом порядке. Гарантируется, что хотя бы один из коэффициентов не равен нулю.
		Пример
		stdin	stdout
		2 5 2 	-0.5 -2
		2 4 2 	-1
		2 1 2
		0 4 10	-2.5

	Подсказка
		Для вычисления квадратного корня используйте функцию sqrt из библиотеки cmath. Чтобы подключить
		библиотеку, в начале программы напишите
 * */
	int a,b,c;
	double d,x1,x2;
	cin>>a>>b>>c;
	if(a==0)
	{
		x1=(float)-c/b;
		cout<<x1;

	}else{
		d=b*b-4*a*c;
		if(d>0)
		{
			x1=(-b+sqrt(d))/(2*a);
			x2=(-b-sqrt(d))/(2*a);
			cout<<x1<<" "<<x2;
		}
		else if(d==0)
		{
			x2=(-b)/(2*a);
			cout<<x2;
		}else{
			cout<<"";
		}

	}


}

void ex3()
{
	/*
	 * дано два натуральных числа A и B, не превышающих 1 000 000. Напишите программу, которая вычисляет целую часть частного от деления A на B.

		Если B = 0, выведите "Impossible".

			Пример
			stdin	stdout
			10 2 	5
			3 5	0
			11 0	Impossible
*/
	long a,b;
	cin>>a>>b;
	if(b==0)
	{
		cout<<"Impossible";
	}else{
		cout<<a/b;

	}
}

void ex4()
{
	/*
	 * Написать программу вычисления стоимости покупки с учётом скидки. Скидка в X процентов предоставляется, если сумма
	 * покупки больше A рублей, в Y процентов - если сумма больше B рублей.
	В стандартном вводе содержится пять вещественных чисел, разделённых пробелом:
	N, A, B, X, Y (A < B) - где N - исходная стоимость товара. Выведите стоимость покупки с учётом скидки.

			Пример
			stdin					stdout
			100 110 120 5 10		100
			115 110 120 5 10		109.25
			150 110 120 5 12.5 		131.25
	 */
	double n,a,b,x,y;
	cin>>n>>a>>b>>x>>y;
	if(n<a && n<b)
	{
		cout<<n;
	}else if(n>a && n<b)
	{
		cout<<n-((n/100)*x);
	}else if(n>a && n>b)
	{
		cout<<n-((n/100)*y);
	}


}

void ex5()
{
	/*
	 * Дано два целых числа A и B (A <= B, A >= 1, B <= 30000). Выведите через пробел все чётные числа от A до B (включительно).

		Для проверки целого числа x на чётность используется операция взятия остатка от деления на 2,
		 которая в C++ оформляется с помощью символа "%". Например,



		Пример

			stdin	stdout
			1 10	2 4 6 8 10
			2 3		2
			9 11	10

*/
	int a,b;
	cin>>a>>b;
	for(int i=a;i<=b;i++)
	{
		if(i%2==0)
		{cout<<i<<" ";}
	}

}

void ex6()
{

/*
 * Дана строка. Найдите в этой строке второе вхождение буквы f и выведите индекс этого вхождения.
 *  Если буква f в данной строке встречается только один раз, выведите число -1, а если не встречается
 *  ни разу, выведите число -2. Индексы нумеруются с нуля.
Пример
	stdin		stdout
	comfort		-1
	coffee		3
	car			-2
*/
	string str;
	int i=0, count=0;
	cin>>str;
	/*for(i=0;i<str.size();i++)
	{
		if(str[i]=='f')
			count++;
		i++;
		if(count==2)
			break;
	}*/

	if(count==0)
	{
		cout<<-2;
	}else if(count==1)
	{
		cout<<-1;
	}else{
		cout<<i;

	}
}


void ex7()
{
	/*
	 * В stdin даны два натуральных числа. Найти их наибольший общий делитель.
		Пример
		stdin	stdout
		25 27	1
		12 16	4
		13 13	13
	 * */
}


void ex8()
{
/*
 * На вход дано целое положительное число N. Выведите его в двоичной системе счисления без ведущих нулей.

			Пример
			stdin		stdout
			5			101
			32			100000
			1			1
			Подсказка
    число N можно считывать в переменную типа int
    в этой задаче вам может пригодиться контейнер vector; напоминаем, что добавление значения x в конец вектора v делается так: v.push_back(x);*/
}

/*exercise 9*/


int main() {
	ex6();
	return 0;
}
